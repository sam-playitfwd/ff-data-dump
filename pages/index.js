import { async } from "@firebase/util";
import axios from "axios";
import {
  collection,
  doc,
  setDoc,
  serverTimestamp,
  set,
  updateDoc,
  onSnapshot,
  getDoc,
} from "firebase/firestore";
import { ref } from "firebase/storage";
import Head from "next/head";
import { db } from "../config/firebase";
import styles from "../styles/Home.module.css";
import { DateToDecimal } from "../utils/DateToDecimal";

export default function Home() {
  const cronScheduler = require("cron").CronJob;
  const getPegaxyData = async () => {
    // setisLoading(true);
    const result = await axios
      .get(
        "https://api-apollo.pegaxy.io/v1/pegas/owner/user/0xbdd91bE603bA379C0F09B616938F77c4A56bC6Cf"
      )
      .then((res) => ({ status: res.status, data: res.data }))
      .catch((err) => ({
        status: err.response.data.code,
        message: err.response.data.message,
      }));
    if (result.status === 200) {
      result.data.map(async (scholar, i) => {
        if (i <= 0 && scholar.renterAddress) {
          const gameDump = collection(
            db,
            "Games",
            "weVihfU4bEo2WfC42mYz",
            "dataDump",
            DateToDecimal,
            "items"
          );
          await setDoc(doc(gameDump, scholar.renterAddress), scholar);
          const dataDump = doc(
            db,
            "Games",
            "weVihfU4bEo2WfC42mYz",
            "dataDump",
            DateToDecimal
          );

          const docExist = await getDoc(dataDump);

          if (docExist.data()) {
            await updateDoc(dataDump, {
              created: serverTimestamp(new Date()),
              status: "sucessful modified",
            });
          } else {
            await setDoc(
              doc(
                db,
                "Games",
                "weVihfU4bEo2WfC42mYz",
                "dataDump",
                DateToDecimal
              ),
              {
                created: serverTimestamp(new Date()),
                status: "sucessful created",
              }
            );
          }

          console.log("logging", new Date());
        } else {
          // setisLoading(false);
        }
      });
    } else {
      console.log(result.message);
      // setisLoading(false);
    }
  };
  var dump = new cronScheduler("0 30 * * * *", () => {
    getPegaxyData();
  });
  dump.start();
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    </div>
  );
}

// dataDump.get().then(async (docExist) => {
//   if (docExist) {

//   } else {
//
//     console.log("created");
//   }
// });

// await set(
//   ref(db, "Games/weVihfU4bEo2WfC42mYz/dataDump/" + DateToDecimal),
//   {
//     created: serverTimestamp(new Date()),
//     status: "unsucessful",
//   }
// );
// await setDoc(doc(dataDump, DateToDecimal), {
//   created: serverTimestamp(new Date()),
//   status: "sucessful",
// });
// setReload(!reload);
